This project is simulation of a debate and it lasts for a certain time depending on the user input from the command line. in the thread handler function for phonecall threads (phonecall()), a binary semaphore (id_lock) is used to protect the critical region of updating next_id - a global variable which assigns a number for 1 to 200 to each phonecall thread. Another binary semaphore (connected_lock) is used to protect the critical region where connected variable is being checked or updated and makes sure only 5 phonecalls(threads) are connected to the call lines at a given time. A counting semaphore (operators) protects the critical region where a phonecall thread that is connected to a line talks to an operator and makes sure only 2 phnecall threads that are connected to a line are able to talk to the 2 operators at a given time. All semaphores are properly initialised in the main thread using sem_init() and destroyed using sem_destroy(). There are 2 thread functions phonecall() and timerThread(). Timer thread is created to determine how long the debate should last for. timerThread() is the thread handle function that takes care of it. All threads are created using pthread_create() and timer thread is joined using pthread_join() while the phonecall threads are detached using the pthread_detach() once it finishes execution and all the threads are terminated after the exit() command is executed. 

Video Link:
https://youtu.be/lybpCO-ph1M
